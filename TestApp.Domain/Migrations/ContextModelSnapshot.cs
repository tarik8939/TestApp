// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApp.Domain.Data;

#nullable disable

namespace TestApp.Domain.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestApp.Domain.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "1"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "2"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "3"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "4"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "5",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "6",
                            ParentCategoryId = 2
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "7",
                            ParentCategoryId = 3
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "8",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "9",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "10",
                            ParentCategoryId = 8
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "11",
                            ParentCategoryId = 9
                        },
                        new
                        {
                            CategoryId = 12,
                            CategoryName = "12",
                            ParentCategoryId = 11
                        },
                        new
                        {
                            CategoryId = 13,
                            CategoryName = "13",
                            ParentCategoryId = 12
                        },
                        new
                        {
                            CategoryId = 14,
                            CategoryName = "14",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            CategoryId = 15,
                            CategoryName = "15",
                            ParentCategoryId = 6
                        },
                        new
                        {
                            CategoryId = 16,
                            CategoryName = "16",
                            ParentCategoryId = 7
                        });
                });

            modelBuilder.Entity("TestApp.Domain.Models.Category", b =>
                {
                    b.HasOne("TestApp.Domain.Models.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("TestApp.Domain.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
